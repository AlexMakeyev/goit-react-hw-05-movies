{"version":3,"file":"static/js/680.476a9bbd.chunk.js","mappings":"ySAIMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAIjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHe,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDAQZG,EAAa,mCAAG,WAAMC,GAAN,yFACJX,EAASM,IAAT,iBAAuBK,IADnB,uBACnBJ,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbK,EAAgB,mCAAG,WAAMD,GAAN,yFACPX,EAASM,IAAT,iBAAuBK,EAAvB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,EAAKM,MAFkB,2CAAH,sDAKhBC,EAAgB,mCAAG,WAAMH,GAAN,yFACPX,EAASM,IAAT,iBAAuBK,EAAvB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,EAAKQ,SAFkB,2CAAH,qD,yIC/BhBC,EAAUC,EAAAA,EAAAA,GAAH,yFAOPC,EAAUD,EAAAA,EAAAA,GAAH,+JAQPE,EAAWF,EAAAA,EAAAA,EAAH,8C,SChBd,SAASG,EAAT,GAAwC,IACvCb,EADsC,EAAhBc,aACFC,KAAI,YAA8B,IAA3BX,EAA0B,EAA1BA,GAAIY,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3C,OACE,UAACN,EAAD,YACE,SAACC,EAAD,UAAWI,GAAkB,qBAC7B,uBAAIC,GAAoB,uBAFZb,EAKjB,IACD,OAAO,SAACK,EAAD,UAAUT,GAClB,CCVM,IAAMkB,EAAWR,EAAAA,EAAAA,IAAH,oHCKN,SAASS,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAON,EAAP,KAAqBO,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAiBe,GAASG,KAAKJ,EAChC,GAAE,CAACC,IAECR,EAGL,OAA4B,IAAxBA,EAAaY,QAEb,SAACR,EAAD,WACE,4EAKC,SAACL,EAAD,CAAaC,aAAcA,GACnC,C","sources":["Api/Api.jsx","components/Reviews/ReviewsList/ReviewsList.styled.jsx","components/Reviews/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '04a8506af1d13c9f78b70db5507b16dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data;\n};\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\nexport const getMoviesbyId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const RevMenu = styled.ul`\n  margin: auto;\n  padding: 15px;\n\n  background-color: white;\n`;\n\nexport const RevItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 490px;\n  list-style: none;\n  align-items: center;\n`;\nexport const RevTitle = styled.p`\n  font-weight: bold;\n`;\n","import { RevMenu, RevItem, RevTitle } from './ReviewsList.styled';\nexport function ReviewsList({ movieReviews }) {\n  const data = movieReviews.map(({ id, author, content }) => {\n    return (\n      <RevItem key={id}>\n        <RevTitle>{author ? author : 'no author found'}</RevTitle>\n        <p>{content ? content : 'no content found'}</p>\n      </RevItem>\n    );\n  });\n  return <RevMenu>{data}</RevMenu>;\n}\n","import styled from '@emotion/styled';\nexport const RevtInfo = styled.div`\n  display: block;\n  background-color: white;\n  text-align: center;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'Api/Api';\nimport { ReviewsList } from './ReviewsList/ReviewsList';\nimport { RevtInfo } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMoviesReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n  if (movieReviews.length === 0) {\n    return (\n      <RevtInfo>\n        <p>Sorry, there is no reviews for current movie.</p>\n      </RevtInfo>\n    );\n  }\n\n  return <ReviewsList movieReviews={movieReviews} />;\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","searchMovies","query","getMoviesbyId","id","getMoviesCredits","cast","getMoviesReviews","results","RevMenu","styled","RevItem","RevTitle","ReviewsList","movieReviews","map","author","content","RevtInfo","Reviews","useState","setMovieReviews","movieId","useParams","useEffect","then","length"],"sourceRoot":""}