{"version":3,"file":"static/js/570.c1b6c029.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Alert/Alert.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '04a8506af1d13c9f78b70db5507b16dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data;\n};\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\nexport const getMoviesbyId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","import { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function Alert() {\n  toast.error('Something went wrong...');\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n","import { ThreeCircles } from 'react-loader-spinner';\nexport function Loader() {\n  return (\n    <div>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n      ;\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 15px;\n`;\nexport const InfoContainer = styled.div`\n  margin-left: 20px;\n`;\nexport const MovieTitle = styled.h2`\n  font-size: 25px;\n`;\n\nexport const MovieInfo = styled.p`\n  font-size: 20px;\n  line-height: 1.14;\n`;\n","// import { Outlet, useLocation, NavLink } from 'react-router-dom';\nimport {\n  MovieContainer,\n  InfoContainer,\n  MovieTitle,\n  MovieInfo,\n} from './MovieItem.styled';\nimport image_placeholder from '../../images/image_placeholder.png';\n\nexport function MovieItem({ movie, onClick }) {\n  // const location = useLocation();\n  // const from = location.state?.from ?? '/movies';\n\n  const {\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n    backdrop_path,\n  } = movie;\n\n  const backdrop = `https://image.tmdb.org/t/p/w500/${backdrop_path}`;\n  return (\n    <>\n      <div backdrop_path={backdrop} onClick={() => onClick(backdrop)}>\n        <MovieContainer>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : image_placeholder\n            }\n            alt={title}\n          />\n          <InfoContainer>\n            <MovieTitle>{title}</MovieTitle>\n            <MovieInfo>{release_date}</MovieInfo>\n            <MovieInfo>\n              {vote_average\n                ? Math.round((vote_average * 100) / 10)\n                : 'no rating found'}\n              %\n            </MovieInfo>\n            <MovieTitle>Overview</MovieTitle>\n            <MovieInfo>{overview ? overview : 'no overview found'}</MovieInfo>\n            <MovieTitle>Genres</MovieTitle>\n            <MovieInfo>\n              {genres\n                ? genres.map(genre => genre.name).join(', ')\n                : 'no genres found'}\n            </MovieInfo>\n          </InfoContainer>\n        </MovieContainer>\n      </div>\n      <div>{/* <Outlet /> */}</div>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  overflow: scroll;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const ModalContainer = styled.div`\n  background-color: white;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  border: 1px solid #4fa94d;\n  border-radius: 2px;\n  width: 80px;\n  height: 40px;\n  margin-left: 20px;\n  background-color: #fff;\n  color: #4fa94d;\n  cursor: pointer;\n  :active {\n    background-color: #4fa94d;\n    color: #fff;\n  }\n  :focus {\n    background-color: #4fa94d;\n    color: #fff;\n  }\n`;\nexport const ModalTitle = styled.h2`\n  text-align: center;\n`;\nexport const ModalList = styled.div`\n  text-align: center;\n`;\nexport const ModalLink = styled(NavLink)`\n  text-decoration: none;\n  margin: 10px;\n  width: 80px;\n  display: inline-block;\n  padding: 10px 15px;\n  color: #4fa94d;\n  border: 1px solid #4fa94d;\n  border-radius: 2px;\n  background-color: #fff;\n  :active {\n    background-color: #4fa94d;\n    color: #fff;\n  }\n  :focus {\n    background-color: #4fa94d;\n    color: #fff;\n  }\n`;\nexport const ModalImg = styled.img`\n  width: 100%;\n`;\n","import { useEffect } from 'react';\nimport { useLocation, Outlet, useNavigate } from 'react-router-dom';\nimport { FcLeft } from 'react-icons/fc';\nimport { createPortal } from 'react-dom';\nimport {\n  Overlay,\n  ModalWindow,\n  Button,\n  ModalContainer,\n  ModalTitle,\n  ModalLink,\n  ModalList,\n  ModalImg,\n} from './Modal.styled';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport function Modal({ backdrop, onClose }) {\n  const location = useLocation();\n  const from = location.state?.from ?? '/movies';\n  const navigate = useNavigate();\n  const goBack = () => navigate(from);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = element => {\n      if (element.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const instance = (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <ModalContainer>\n          <ModalImg src={backdrop} alt=\"\" />\n          <ModalTitle>Additional information</ModalTitle>\n          <ModalList>\n            <ModalLink state={{ from }} to=\"cast\">\n              Cast\n            </ModalLink>\n            <ModalLink state={{ from }} to=\"reviews\">\n              Reviews\n            </ModalLink>\n            <Button onClick={goBack}>\n              <FcLeft />\n              Home\n            </Button>\n          </ModalList>\n        </ModalContainer>\n        <Outlet />\n      </ModalWindow>\n    </Overlay>\n  );\n  // console.log(instance);\n\n  return createPortal(instance, modalRoot);\n}\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 550px;\n  left: 515px;\n  margin-top: 10px;\n  border: 1px solid #4fa94d;\n  border-radius: 2px;\n  width: 80px;\n  height: 40px;\n  margin-left: 20px;\n  background-color: #fff;\n  color: #4fa94d;\n  cursor: pointer;\n  :active {\n    background-color: #4fa94d;\n    color: #fff;\n  }\n  :focus {\n    background-color: #4fa94d;\n    color: #fff;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMoviesbyId } from 'Api/Api';\nimport { Alert } from 'components/Alert/Alert';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { FcLeft } from 'react-icons/fc';\nimport { Modal } from 'components/Modal/Modal';\nimport { Button } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(0);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setshowModal] = useState(false);\n  const [backdrop, setBackdrop] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const data = await getMoviesbyId(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.toJSON());\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const toggleModal = () => {\n    setshowModal(!showModal);\n  };\n  const handleImg = modal => {\n    setBackdrop(modal);\n    setshowModal(!showModal);\n  };\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <Alert />}\n      <Button onClick={goBack}>\n        <FcLeft />\n        Back\n      </Button>\n      {movie && <MovieItem movie={movie} onClick={handleImg} />}\n      {showModal && <Modal onClose={toggleModal} backdrop={backdrop} />}\n    </div>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","searchMovies","query","getMoviesbyId","id","getMoviesCredits","cast","getMoviesReviews","results","Alert","toast","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","MovieContainer","styled","InfoContainer","MovieTitle","MovieInfo","MovieItem","movie","onClick","poster_path","title","vote_average","overview","genres","release_date","backdrop_path","backdrop","src","image_placeholder","alt","Math","round","map","genre","name","join","Overlay","ModalWindow","ModalContainer","Button","ModalTitle","ModalList","ModalLink","NavLink","ModalImg","modalRoot","document","getElementById","Modal","onClose","from","useLocation","state","navigate","useNavigate","useEffect","handleKeyDown","element","code","window","addEventListener","removeEventListener","event","currentTarget","target","to","createPortal","MovieDetails","useState","setMovie","error","setError","loading","setLoading","showModal","setshowModal","setBackdrop","movieId","useParams","fetchMovie","toJSON","modal"],"sourceRoot":""}