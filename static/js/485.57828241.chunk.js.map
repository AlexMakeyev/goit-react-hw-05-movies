{"version":3,"file":"static/js/485.57828241.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Alert/Alert.jsx","components/Loader/Loader.jsx","components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '04a8506af1d13c9f78b70db5507b16dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data;\n};\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\nexport const getMoviesbyId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","import { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function Alert() {\n  toast.error('Something went wrong...');\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n","import { ThreeCircles } from 'react-loader-spinner';\nexport function Loader() {\n  return (\n    <div>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n      ;\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n`;\nexport const Item = styled.li`\n  margin: 10px;\n`;\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n`;\nexport const ItemTitle = styled.p`\n  font-size: 15px;\n  font-weight: bold;\n  color: black;\n`;\nexport const Poster = styled.img`\n  width: 300px;\n  height: 450px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, ItemLink, ItemTitle, Poster } from './MovieList.styled';\nimport image_placeholder from '../../images/image_placeholder.png';\nexport function MoviesList({ movies }) {\n  const location = useLocation();\n  const items = movies.map(({ id, title, poster_path }) => (\n    <Item key={id}>\n      <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : image_placeholder\n          }\n          alt={title}\n        />\n        <ItemTitle>{title}</ItemTitle>\n      </ItemLink>\n    </Item>\n  ));\n\n  return <List>{items}</List>;\n}\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.main`\n  margin: auto;\n  width: 1600px;\n  height: 100%;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: #4fa94d;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../Api/Api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Alert } from 'components/Alert/Alert';\nimport { GoFlame } from 'react-icons/go';\nimport { MainContainer, Title } from './Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await getTrendingMovies();\n        setMovies(result.results);\n      } catch (error) {\n        setError(error.toJSON());\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <MainContainer>\n      {loading && <Loader />}\n      {error && <Alert />}\n      <Title>\n        Hot week trends\n        <GoFlame />\n      </Title>\n\n      <MoviesList movies={movies} />\n    </MainContainer>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","searchMovies","query","getMoviesbyId","id","getMoviesCredits","cast","getMoviesReviews","results","Alert","toast","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","List","styled","Item","ItemLink","Link","ItemTitle","Poster","MoviesList","movies","location","useLocation","items","map","title","poster_path","to","state","from","src","image_placeholder","alt","MainContainer","Title","Home","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchMovies","result","toJSON"],"sourceRoot":""}