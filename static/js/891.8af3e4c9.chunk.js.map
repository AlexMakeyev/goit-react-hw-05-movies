{"version":3,"file":"static/js/891.8af3e4c9.chunk.js","mappings":"ySAIMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAIjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHe,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDAQZG,EAAa,mCAAG,WAAMC,GAAN,yFACJX,EAASM,IAAT,iBAAuBK,IADnB,uBACnBJ,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbK,EAAgB,mCAAG,WAAMD,GAAN,yFACPX,EAASM,IAAT,iBAAuBK,EAAvB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,EAAKM,MAFkB,2CAAH,sDAKhBC,EAAgB,mCAAG,WAAMH,GAAN,yFACPX,EAASM,IAAT,iBAAuBK,EAAvB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,EAAKQ,SAFkB,2CAAH,qD,yIC/BhBC,EAAWC,EAAAA,EAAAA,GAAH,yFAORC,EAAWD,EAAAA,EAAAA,GAAH,8IAORE,EAAYF,EAAAA,EAAAA,EAAH,8C,mBCbf,SAASG,EAAT,GAAkC,IACjCb,EADgC,EAAbc,UACFC,KAAI,SAAAC,GACzB,IAAQZ,EAA+CY,EAA/CZ,GAAIa,EAA2CD,EAA3CC,aAAcC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UACzC,OACE,UAACR,EAAD,YACE,gBACES,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAEP,SAACN,EAAD,UAAYM,GAAgC,mBAC5C,SAACN,EAAD,UAAYO,GAAwB,oBAVvBf,EAalB,IACD,OAAO,SAACK,EAAD,UAAWT,GACnB,CCrBM,IAAMuB,EAAWb,EAAAA,EAAAA,IAAH,oHCKN,SAASc,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,GAA3C,eAAOX,EAAP,KAAkBY,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,IAAiBsB,GAASG,KAAKJ,EAChC,GAAE,CAACC,IAECb,EAGL,OAAyB,IAArBA,EAAUiB,QAEV,SAACR,EAAD,WACE,yEAKC,SAACV,EAAD,CAAUC,UAAWA,GAC7B,C","sources":["Api/Api.jsx","components/Cast/CastList/CastList.styled.jsx","components/Cast/CastList/CastList.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '04a8506af1d13c9f78b70db5507b16dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data;\n};\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\nexport const getMoviesbyId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const CastMenu = styled.ul`\n  margin: auto;\n  padding: 15px;\n\n  background-color: white;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  list-style: none;\n  align-items: center;\n`;\nexport const CastTitle = styled.p`\n  font-weight: bold;\n`;\n","import { CastMenu, CastItem, CastTitle } from './CastList.styled';\nimport image_placeholder from '../../../images/image_placeholder.png';\n\nexport function CastList({ movieCast }) {\n  const data = movieCast.map(item => {\n    const { id, profile_path, original_name, character } = item;\n    return (\n      <CastItem key={id}>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w300${profile_path}`\n              : image_placeholder\n          }\n          alt={original_name}\n        />\n        <CastTitle>{original_name ? original_name : 'no decription'}</CastTitle>\n        <CastTitle>{character ? character : 'no decription'}</CastTitle>\n      </CastItem>\n    );\n  });\n  return <CastMenu>{data}</CastMenu>;\n}\n","import styled from '@emotion/styled';\nexport const CastInfo = styled.div`\n  display: block;\n  background-color: white;\n  text-align: center;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCredits } from 'Api/Api';\nimport { CastList } from './CastList/CastList';\nimport { CastInfo } from './Cast.styled';\n\nexport default function Cast() {\n  const [movieCast, setMovieCast] = useState(0);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMoviesCredits(movieId).then(setMovieCast);\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n  if (movieCast.length === 0) {\n    return (\n      <CastInfo>\n        <p>Sorry, there is no cast for current movie.</p>\n      </CastInfo>\n    );\n  }\n\n  return <CastList movieCast={movieCast} />;\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","searchMovies","query","getMoviesbyId","id","getMoviesCredits","cast","getMoviesReviews","results","CastMenu","styled","CastItem","CastTitle","CastList","movieCast","map","item","profile_path","original_name","character","src","image_placeholder","alt","CastInfo","Cast","useState","setMovieCast","movieId","useParams","useEffect","then","length"],"sourceRoot":""}